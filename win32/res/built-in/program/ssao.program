Common Beg
#version 330 core
Common End

Pass Beg
	CullFace    Back
	DrawType    Index
	RenderQueue Geometric

    VShader Beg
		layout(location = 0) in vec3 a_v_;
		layout(location = 1) in vec2 a_uv_;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

		void main()
		{
            v_out_.mUV  = a_uv_;
			gl_Position = vec4(a_v_, 1);
		}
	VShader End

    FShader Beg
		uniform mat4 matrix_v_;
		uniform mat4 matrix_p_;

        uniform sampler2D screen_depth_;
        uniform sampler2D screen_position_;
		
        //  球形采样偏移数据
        vec3 samples[] = vec3[](
            vec3(  0,            1,              0           ),
            vec3(  0,            0.707107,       0.707107    ),
            vec3(  0.5,          0.707107,       0.5         ),
            vec3(  0.707107,     0.707107,      -3.09086e-08 ),
            vec3(  0.5,          0.707107,      -0.5         ),
            vec3( -6.18172e-08,  0.707107,      -0.707107    ),
            vec3( -0.5,          0.707107,      -0.5         ),
            vec3( -0.707107,     0.707107,       8.43216e-09 ),
            vec3( -0.5,          0.707107,       0.5         ),
            vec3(  0,           -4.37114e-08,    1           ),
            vec3(  0.707107,    -4.37114e-08,    0.707107    ),
            vec3(  1,           -4.37114e-08,   -4.37114e-08 ),
            vec3(  0.707107,    -4.37114e-08,   -0.707107    ),
            vec3( -8.74228e-08, -4.37114e-08,   -1           ),
            vec3( -0.707107,    -4.37114e-08,   -0.707107    ),
            vec3( -1,           -4.37114e-08,    1.19249e-08 ),
            vec3( -0.707107,    -4.37114e-08,    0.707107    ),
            vec3(  0,           -0.707107,       0.707107    ),
            vec3(  0.5,         -0.707107,       0.5         ),
            vec3(  0.707107,    -0.707107,      -3.09086e-08 ),
            vec3(  0.5,         -0.707107,      -0.5         ),
            vec3( -6.18172e-08, -0.707107,      -0.707107    ),
            vec3( -0.5,         -0.707107,      -0.5         ),
            vec3( -0.707107,    -0.707107,       8.43216e-09 ),
            vec3( -0.5,         -0.707107,       0.5         ),
            vec3(  0,           -1,              0           )
		);

        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        out vec4 color_;

		void main()
		{
            float weight   = 0;
            vec4  model    = texture(screen_position_, v_out_.mUV);
            vec4  depth    = texture(screen_depth_   , v_out_.mUV);
            mat4  viewproj = matrix_p_ * matrix_v_;
            for (int i = 0; i != samples.length(); ++i)
            {
                vec4 pos = vec4(model.xyz + samples[i], 1);
                pos      = viewproj * pos;
                pos.xyz  = pos.xyz  / pos.w;
                pos.xyz  = (pos.xyz + 1) * 0.5;
                pos      = texture(screen_depth_, pos.xy);
                if (pos.r < depth.r) { ++weight; }
            }
            weight = max( weight - samples.length() * 0.5, 0);
            color_ = vec4(weight / samples.length() * 0.5, 0, 0, 1);
		}
	FShader End
Pass End

Pass Beg
	CullFace    Back
	DrawType    Index
	RenderQueue Geometric

    VShader Beg
		layout(location = 0) in vec3 a_v_;
		layout(location = 1) in vec2 a_uv_;

        out V_OUT_ {
            vec2 mUV;
        } v_out_;

		void main()
		{
            v_out_.mUV  = a_uv_;
			gl_Position = vec4(a_v_, 1);
		}
	VShader End

    FShader Beg
        uniform vec2        view_size_;
        uniform sampler2D   screen_sao_;
		
        in V_OUT_ {
            vec2 mUV;
        } v_out_;

        out vec4 color_;

		void main()
		{
            vec2 step = 1.0f / textureSize(screen_sao_, 0);
            float red = 0;
            for (int x = -1; x != 2; ++x)
            {
                for (int y = -1; y != 2; ++y)
                {
                    red += texture(screen_sao_, v_out_.mUV + vec2(x * step.x, y * step.y)).r;
                }
            }
            color_ = vec4(red / 9, 0, 0, 1);
		}
	FShader End
Pass End